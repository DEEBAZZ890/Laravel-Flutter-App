## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Recommendation API'
description: |-

  API endpoints for managing recommendations
endpoints:
  -
    httpMethods:
      - GET
    uri: api/recommendations
    metadata:
      groupName: 'Recommendation API'
      groupDescription: |-

        API endpoints for managing recommendations
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of recommendations.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/recommendations/{id}'
    metadata:
      groupName: 'Recommendation API'
      groupDescription: |-

        API endpoints for managing recommendations
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified recommendation.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recommendation.'
        required: true
        example: in
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: in
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/recommendations
    metadata:
      groupName: 'Recommendation API'
      groupDescription: |-

        API endpoints for managing recommendations
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created recommendation in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      result_id:
        name: result_id
        description: ''
        required: true
        example: quisquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'Must not be greater than 1000 characters.'
        required: true
        example: wppuklezyfjwb
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      action_link:
        name: action_link
        description: 'Must not be greater than 255 characters.'
        required: true
        example: gunmyoncobjukljz
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      result_id: quisquam
      content: wppuklezyfjwb
      action_link: gunmyoncobjukljz
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/recommendations/{id}'
    metadata:
      groupName: 'Recommendation API'
      groupDescription: |-

        API endpoints for managing recommendations
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified recommendation in storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recommendation.'
        required: true
        example: dicta
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: dicta
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      result_id:
        name: result_id
        description: ''
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      content:
        name: content
        description: 'Must not be greater than 1000 characters.'
        required: false
        example: khazceudyeylwtmpk
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      action_link:
        name: action_link
        description: 'Must not be greater than 255 characters.'
        required: false
        example: dmlcrjrriftfavoxayjyanwns
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      content: khazceudyeylwtmpk
      action_link: dmlcrjrriftfavoxayjyanwns
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/recommendations/{id}'
    metadata:
      groupName: 'Recommendation API'
      groupDescription: |-

        API endpoints for managing recommendations
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified recommendation from storage.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the recommendation.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
