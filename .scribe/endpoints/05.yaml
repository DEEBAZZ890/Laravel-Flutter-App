name: 'Quiz Attempt API'
description: |-

  API endpoints for managing quiz attempts
endpoints:
  -
    httpMethods:
      - GET
    uri: api/quiz_attempts
    metadata:
      groupName: 'Quiz Attempt API'
      groupDescription: |-

        API endpoints for managing quiz attempts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      page:
        name: page
        description: 'Must be at least 1.'
        required: false
        example: 25
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      per_page:
        name: per_page
        description: 'Must be at least 1. Must not be greater than 10.'
        required: false
        example: 3
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      page: 25
      per_page: 3
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/quiz_attempts/{id}'
    metadata:
      groupName: 'Quiz Attempt API'
      groupDescription: |-

        API endpoints for managing quiz attempts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the quiz attempt.'
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: ex
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/quiz_attempts
    metadata:
      groupName: 'Quiz Attempt API'
      groupDescription: |-

        API endpoints for managing quiz attempts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: libero
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      quiz_id:
        name: quiz_id
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      attempt_number:
        name: attempt_number
        description: 'Must be at least 1.'
        required: true
        example: 39
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      score:
        name: score
        description: 'Must be at least 0.'
        required: false
        example: 59
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      completed_at:
        name: completed_at
        description: 'Must be a valid date.'
        required: false
        example: '2023-11-28T13:29:46'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      user_id: libero
      quiz_id: et
      attempt_number: 39
      score: 59
      completed_at: '2023-11-28T13:29:46'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/quiz_attempts/{id}'
    metadata:
      groupName: 'Quiz Attempt API'
      groupDescription: |-

        API endpoints for managing quiz attempts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the quiz attempt.'
        required: true
        example: modi
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: modi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: true
        example: harum
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      quiz_id:
        name: quiz_id
        description: ''
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      attempt_number:
        name: attempt_number
        description: 'Must be at least 1.'
        required: true
        example: 18
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      score:
        name: score
        description: 'Must be at least 0.'
        required: false
        example: 74
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      completed_at:
        name: completed_at
        description: 'Must be a valid date.'
        required: false
        example: '2023-11-28T13:29:46'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      user_id: harum
      quiz_id: quia
      attempt_number: 18
      score: 74
      completed_at: '2023-11-28T13:29:46'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/quiz_attempts/{id}'
    metadata:
      groupName: 'Quiz Attempt API'
      groupDescription: |-

        API endpoints for managing quiz attempts
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the quiz attempt.'
        required: true
        example: placeat
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      id: placeat
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
